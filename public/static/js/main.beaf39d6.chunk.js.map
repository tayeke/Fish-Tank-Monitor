{"version":3,"sources":["images/fishes2.jpg","index.web.js","App.js","CurrentTemp.js","CurrentTest.js","CurrentPh.js","TemperatureScreen.js","TestScreen.js","PhScreen.js","images/fishes3.jpg","Measurements.js","images/fishes.jpeg"],"names":["AppRegistry","appName","App","rootTag","document","MyTheme","DefaultTheme","colors","primary","background","HomeScreen","navigation","style","flex","contentInsetAdjustmentBehavior","styles","source","Platform","require","onPress","Stack","StyleSheet","scrollView","backgroundColor","engine","position","right","body","sectionContainerContainer","width","marginTop","paddingHorizontal","flexDirection","alignItems","alignContent","sectionContainer","alignSelf","sectionTitle","fontSize","fontWeight","color","sectionDescription","highlight","footer","padding","paddingRight","textAlign","headerText","paddingBottom","paddingTop","headerBackground","headerTextBackground","currentMeasure","barStyle","theme","name","component","TemperatureScreen","PhScreen","TestScreen","CurrentTemp","temperature","Measurements","currentTemperature","console","this","setState","state","Component","textMeasure","CurrentTest","test","currentTest","CurrentPh","ph","currentPh","phMeasure","temperatures","temps","i","key","tempListItem","borderBottomWidth","borderBottomColor","paddingVertical","paddingLeft","date","dateText","measure","measureText","tests","testListItem","phListItem","headers","Headers","fetch","response","responseJson"],"mappings":"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","file":"static/js/main.beaf39d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fishes2.135e3664.jpg\";","/**\n * @format\n */\n\nimport {AppRegistry} from 'react-native';\nimport App from './App';\nimport {name as appName} from './app.json';\n\nAppRegistry.registerComponent(appName, () => App);\nAppRegistry.runApplication(appName, {\n    // Mount the react-native app in the \"root\" div of index.html\n    rootTag: document.getElementById('root'),\n});\n","import 'react-native-gesture-handler';\n/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow\n */\n\nimport React from 'react';\nimport {\n  SafeAreaView,\n  StyleSheet,\n  ScrollView,\n  View,\n  ImageBackground,\n  Text,\n  TouchableOpacity,\n  StatusBar,\n  Platform,\n} from 'react-native';\nimport CurrentTemp from './CurrentTemp.js';\nimport CurrentTest from './CurrentTest.js';\nimport CurrentPh from './CurrentPh.js';\nimport TemperatureScreen from './TemperatureScreen.js';\nimport TestScreen from './TestScreen.js';\nimport PhScreen from './PhScreen.js';\n\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst MyTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: 'rgba(0, 90, 100, 1)',\n    background: '#FFFFFF',\n  },\n};\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <>\n    <SafeAreaView style={{flex: 1}}>\n      <ScrollView\n        contentInsetAdjustmentBehavior=\"automatic\"\n        style={styles.scrollView}>\n        <ImageBackground\n          source={Platform.OS === 'web' ? './images/fishes.jpeg' : require('./images/fishes.jpeg')}\n          style={styles.headerBackground}>\n        <View style={styles.headerTextBackground}>\n          <Text style={styles.headerText}>Fish Tank Monitor</Text>\n        </View>\n        </ImageBackground>\n        <View style={styles.body}>\n          <TouchableOpacity onPress={() => navigation.navigate('Temperatures')} style={styles.sectionContainerContainer}>\n            <View style={styles.sectionContainer}>\n              <Text style={styles.sectionTitle}>Temperature</Text>\n              <Text style={styles.sectionDescription}>\n                View temperature logs\n              </Text>\n            </View>\n            <CurrentTemp style={styles.currentMeasure}></CurrentTemp>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={() => navigation.navigate('PH')} style={styles.sectionContainerContainer}>\n            <View style={styles.sectionContainer}>\n              <Text style={styles.sectionTitle}>PH</Text>\n              <Text style={styles.sectionDescription}>\n                View PH data results\n              </Text>\n            </View>\n            <CurrentPh style={styles.currentMeasure}></CurrentPh>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={() => navigation.navigate('Tests')} style={styles.sectionContainerContainer}>\n            <View style={styles.sectionContainer}>\n              <Text style={styles.sectionTitle}>Test</Text>\n              <Text style={styles.sectionDescription}>\n                View test data results\n              </Text>\n            </View>\n            <CurrentTest style={styles.currentMeasure}></CurrentTest>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n    </>\n  );\n}\n\nconst Stack = createStackNavigator();\n\nconst App: () => React$Node = () => {\n  return (\n    <>\n    <StatusBar barStyle=\"dark-content\" />\n    <NavigationContainer theme={MyTheme}>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"Temperatures\" component={TemperatureScreen} />\n        <Stack.Screen name=\"PH\" component={PhScreen} />\n        <Stack.Screen name=\"Tests\" component={TestScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    backgroundColor: '#ffffff',\n  },\n  engine: {\n    position: 'absolute',\n    right: 0,\n  },\n  body: {\n    backgroundColor: '#FFFFFF',\n  },\n  sectionContainerContainer: {\n    width: '100%',\n    marginTop: 32,\n    paddingHorizontal: 24,\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignContent: 'space-between',\n  },\n  sectionContainer: {\n    alignSelf: 'flex-start',\n    flex: 4,\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: '#111111',\n  },\n  sectionDescription: {\n    marginTop: 8,\n    fontSize: 18,\n    fontWeight: '400',\n    color: '#111111',\n  },\n  highlight: {\n    fontWeight: '700',\n  },\n  footer: {\n    color: '#111111',\n    fontSize: 12,\n    fontWeight: '600',\n    padding: 4,\n    paddingRight: 12,\n    textAlign: 'right',\n  },\n  headerText: {\n    color: '#FFFFFF',\n    fontSize: 36,\n    fontWeight: '600',\n    paddingBottom: 0,\n    paddingTop: 0,\n    textAlign: 'center',\n  },\n  headerBackground: {\n    width: '100%',\n  },\n  headerTextBackground: {\n    marginTop: 200,\n    paddingTop: 20,\n    paddingBottom: 20,\n    backgroundColor: 'rgba(0, 90, 100, 0.5)',\n  },\n  currentMeasure: {\n    alignSelf: 'flex-end',\n    textAlign: 'right',\n    flex: 1,\n  },\n});\n\nexport default App;\n","import React, { Component } from 'react';\n\nimport {\n  View,\n  Text,\n  StyleSheet,\n} from 'react-native';\n\nimport Measurements from './Measurements.js';\n\nexport default class CurrentTemp extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = { temperature: ''};\n  }\n\n  async componentDidMount(){\n    let currentTemperature = await Measurements.getCurrentTemperature();\n    console.log(currentTemperature);\n    this.setState({\n      temperature: currentTemperature.measure,\n    });\n  }\n\n  render() {\n    return (\n        <View><Text style={styles.textMeasure}>{this.state.temperature}F</Text></View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  textMeasure: {\n    fontSize: 21,\n    color: '#336666',\n    fontWeight: '500',\n  },\n});","import React, { Component } from 'react';\n\nimport {\n  View,\n  Text,\n  StyleSheet,\n} from 'react-native';\n\nimport Measurements from './Measurements.js';\n\nexport default class CurrentTest extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = { test: ''};\n  }\n\n  async componentDidMount(){\n    let currentTest = await Measurements.getCurrentTest();\n    this.setState({\n      test: currentTest.measure,\n    });\n  }\n\n  render() {\n    return (\n    <View><Text style={styles.textMeasure}>{this.state.test}</Text></View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  textMeasure: {\n    fontSize: 21,\n    color: '#336666',\n    fontWeight: '500',\n  },\n});","import React, { Component } from 'react';\n\nimport {\n  View,\n  Text,\n  StyleSheet,\n} from 'react-native';\n\nimport Measurements from './Measurements.js';\n\nexport default class CurrentPh extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = { ph: ''};\n  }\n\n  async componentDidMount() {\n    let currentPh = await Measurements.getCurrentPh();\n    console.log(currentPh);\n    this.setState({\n      ph: currentPh.measure,\n    });\n  }\n\n  render() {\n    return (\n        <View><Text style={styles.phMeasure}>{this.state.ph}</Text></View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  phMeasure: {\n    fontSize: 21,\n    color: '#336666',\n    fontWeight: '500',\n  },\n});","import React, { Component } from 'react';\n\nimport {\n  View,\n  Text,\n  SafeAreaView,\n  ScrollView,\n  ImageBackground,\n  StyleSheet,\n  Platform,\n} from 'react-native';\n\nimport Moment from 'moment';\n\nimport Measurements from './Measurements.js';\n\nexport default class TemperatureScreen extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = { temperatures: []};\n  }\n\n  async componentDidMount(){\n    let temperatures = await Measurements.getTemperatures();\n    this.setState({\n      temperatures: temperatures,\n    });\n  }\n\n  render() {\n\n    let temps = [];\n    for(let i = 0; i < this.state.temperatures.length; i++){\n      temps.push(\n        <View style={styles.tempListItem} key = {i}>\n          <View style={styles.measure}>\n            <Text style={styles.measureText}>{this.state.temperatures[i].measure}F</Text>\n          </View>\n          <View style={styles.date}>\n            <Text style={styles.dateText}>{Moment(this.state.temperatures[i].created_at).format('dd D MMM h:mm')}</Text>\n          </View>\n        </View>\n      )\n    }\n    return (\n      <>\n      <SafeAreaView style={{ flex:1 }}>\n        <ScrollView\n          contentInsetAdjustmentBehavior=\"automatic\"\n          style={styles.scrollView}>\n          <ImageBackground\n            source={Platform.OS === 'web' ? '/images/fishes2.jpg' : require('./images/fishes2.jpg')}\n            style={styles.headerBackground}>\n            <View style={styles.headerTextBackground}>\n              <Text style={styles.headerText}></Text>\n            </View>\n            </ImageBackground>\n          <View style={styles.body}>\n            {temps}\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n      </>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  headerBackground: {\n    width: '100%',\n  },\n  headerTextBackground: {\n    marginTop: 200,\n    paddingTop: 20,\n    paddingBottom: 20,\n    backgroundColor: 'rgba(0, 90, 100, 0)',\n    color: 'rgba(0, 90, 100, 0)',\n  },\n  tempListItem: {\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(0,0,0,0.25)',\n    paddingVertical: 12,\n    paddingLeft: 50,\n    paddingRight: 30,\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignContent: 'space-between',\n    width: '100%',\n  },\n  date: {\n    alignSelf: 'flex-end',\n    flex: 1,\n  },\n  dateText: {\n    fontSize: 18,\n    textAlign: 'right',\n  },\n  measure: {\n    alignSelf: 'flex-start',\n    textAlign: 'left',\n    flex: 1,\n  },\n  measureText: {\n    fontSize: 24,\n    fontWeight: '500',\n  },\n});","import React, { Component } from 'react';\n\nimport {\n  View,\n  Text,\n  SafeAreaView,\n  ScrollView,\n  ImageBackground,\n  StyleSheet,\n  Platform,\n} from 'react-native';\n\nimport Moment from 'moment';\n\nimport Measurements from './Measurements.js';\n\nexport default class TestScreen extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = { tests: []};\n  }\n\n  async componentDidMount(){\n    let tests = await Measurements.getTests();\n    this.setState({\n      tests: tests,\n    });\n  }\n\n  render() {\n\n    let tests = [];\n    for(let i = 0; i < this.state.tests.length; i++){\n      tests.push(\n        <View style={styles.testListItem} key = {i}>\n          <View style={styles.measure}>\n            <Text style={styles.measureText}>{this.state.tests[i].measure}</Text>\n          </View>\n          <View style={styles.date}>\n            <Text style={styles.dateText}>{Moment(this.state.tests[i].created_at).format('dd D MMM h:mm')}</Text>\n          </View>\n        </View>\n      )\n    }\n    return (\n      <>\n      <SafeAreaView style={{ flex:1 }}>\n        <ScrollView\n          contentInsetAdjustmentBehavior=\"automatic\"\n          style={styles.scrollView}>\n          <ImageBackground\n            source={Platform.OS === 'web' ? '/images/fishes2.jpg' : require('./images/fishes2.jpg')}\n            style={styles.headerBackground}>\n            <View style={styles.headerTextBackground}>\n              <Text style={styles.headerText}></Text>\n            </View>\n            </ImageBackground>\n          <View style={styles.body}>\n            {tests}\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n      </>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  headerBackground: {\n    width: '100%',\n  },\n  headerTextBackground: {\n    marginTop: 200,\n    paddingTop: 20,\n    paddingBottom: 20,\n    backgroundColor: 'rgba(0, 90, 100, 0)',\n    color: 'rgba(0, 90, 100, 0)',\n  },\n  testListItem: {\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(0,0,0,0.25)',\n    paddingVertical: 12,\n    paddingLeft: 50,\n    paddingRight: 30,\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignContent: 'space-between',\n    width: '100%',\n  },\n  date: {\n    alignSelf: 'flex-end',\n    flex: 1,\n  },\n  dateText: {\n    fontSize: 18,\n    textAlign: 'right',\n  },\n  measure: {\n    alignSelf: 'flex-start',\n    textAlign: 'left',\n    flex: 1,\n  },\n  measureText: {\n    fontSize: 24,\n    fontWeight: '500',\n  },\n});","import React, { Component } from 'react';\n\nimport {\n  View,\n  Text,\n  SafeAreaView,\n  ScrollView,\n  ImageBackground,\n  StyleSheet,\n  Platform,\n} from 'react-native';\n\nimport Moment from 'moment';\n\nimport Measurements from './Measurements.js';\n\nexport default class PhScreen extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = { ph: []};\n  }\n\n  async componentDidMount(){\n    let ph = await Measurements.getPh();\n    this.setState({\n      ph: ph,\n    });\n  }\n\n  render() {\n\n    let ph = [];\n    for(let i = 0; i < this.state.ph.length; i++){\n      ph.push(\n        <View style={styles.phListItem} key = {i}>\n          <View style={styles.measure}>\n            <Text style={styles.measureText}>{this.state.ph[i].measure}</Text>\n          </View>\n          <View style={styles.date}>\n            <Text style={styles.dateText}>{Moment(this.state.ph[i].created_at).format('dd D MMM h:mm')}</Text>\n          </View>\n        </View>\n      )\n    }\n    return (\n      <>\n      <SafeAreaView style={{ flex:1 }}>\n        <ScrollView\n          contentInsetAdjustmentBehavior=\"automatic\"\n          style={styles.scrollView}>\n          <ImageBackground\n            source={Platform.OS === 'web' ? '/images/fishes3.jpg' : require('./images/fishes3.jpg')}\n            style={styles.headerBackground}>\n            <View style={styles.headerTextBackground}>\n              <Text style={styles.headerText}></Text>\n            </View>\n            </ImageBackground>\n          <View style={styles.body}>\n            {ph}\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n      </>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  headerBackground: {\n    width: '100%',\n  },\n  headerTextBackground: {\n    marginTop: 200,\n    paddingTop: 20,\n    paddingBottom: 20,\n    backgroundColor: 'rgba(0, 90, 100, 0)',\n    color: 'rgba(0, 90, 100, 0)',\n  },\n  phListItem: {\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(0,0,0,0.25)',\n    paddingVertical: 12,\n    paddingLeft: 50,\n    paddingRight: 30,\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignContent: 'space-between',\n    width: '100%',\n  },\n  date: {\n    alignSelf: 'flex-end',\n    flex: 1,\n  },\n  dateText: {\n    fontSize: 18,\n    textAlign: 'right',\n  },\n  measure: {\n    alignSelf: 'flex-start',\n    textAlign: 'left',\n    flex: 1,\n  },\n  measureText: {\n    fontSize: 24,\n    fontWeight: '500',\n  },\n});","export default __webpack_public_path__ + \"static/media/fishes3.1bd433d0.jpg\";","import { BASIC_AUTH_TOKEN } from 'react-native-dotenv'\n\nconsole.log('BASIC_AUTH_TOKEN', BASIC_AUTH_TOKEN)\n\nclass Measurements {\n\n  static async getTemperatures() {\n    let headers = new Headers();\n    headers.append(\"Authorization\", \"Basic \" + BASIC_AUTH_TOKEN);\n    try {\n      let response = await fetch('https://fish-tank-monitor.herokuapp.com/temperatures.json', {headers: headers});\n      let responseJson = await response.json();\n      return responseJson;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  static async getCurrentTemperature() {\n    let headers = new Headers();\n    headers.append(\"Authorization\", \"Basic \" + BASIC_AUTH_TOKEN);\n    try {\n      let response = await fetch('https://fish-tank-monitor.herokuapp.com/temperatures/current.json', {headers: headers});\n      let responseJson = await response.json();\n      return responseJson;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  static async getTests() {\n    let headers = new Headers();\n    headers.append(\"Authorization\", \"Basic \" + BASIC_AUTH_TOKEN);\n    try {\n      let response = await fetch('https://fish-tank-monitor.herokuapp.com/tests.json', {headers: headers});\n      let responseJson = await response.json();\n      return responseJson;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  static async getCurrentTest() {\n    let headers = new Headers();\n    headers.append(\"Authorization\", \"Basic \" + BASIC_AUTH_TOKEN);\n    try {\n      let response = await fetch('https://fish-tank-monitor.herokuapp.com/tests/current.json', {headers: headers});\n      let responseJson = await response.json();\n      return responseJson;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  static async getPh() {\n    let headers = new Headers();\n    headers.append(\"Authorization\", \"Basic \" + BASIC_AUTH_TOKEN);\n    try {\n      let response = await fetch('https://fish-tank-monitor.herokuapp.com/ph.json', {headers: headers});\n      let responseJson = await response.json();\n      return responseJson;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  static async getCurrentPh() {\n    let headers = new Headers();\n    headers.append(\"Authorization\", \"Basic \" + BASIC_AUTH_TOKEN);\n    try {\n      let response = await fetch('https://fish-tank-monitor.herokuapp.com/ph/current.json', {headers: headers});\n      let responseJson = await response.json();\n      return responseJson;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\nexport default Measurements;\n\n","export default __webpack_public_path__ + \"static/media/fishes.eb32163d.jpeg\";"],"sourceRoot":""}